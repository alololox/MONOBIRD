name: CD TRUNK POC
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.MONOBIRD_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.MONOBIRD_SECRET }}
on:
  pull_request:
    branches: 
      - morgan/trunk-cd-poc
#  pull_request:
#    branches: 
#      - morgan/trunk-cd-poc
#    paths:
#      - libs/js/elfo

jobs:
  deploy-prod:
    if: github.event_name == 'never' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: copy to s3
      run: aws s3 cp libs/js/elfo/hello.txt s3://arcteryx-monobird-cd-poc/hello.txt
      
  deploy-qa:
    name: s3://arcteryx-monobird-cd-poc/${{github.sha}}/hello.txt
    env:
      S3_URL: s3://arcteryx-monobird-cd-poc/${{github.sha}}/hello.txt
    #if: github.event_name == 'pull_request' && github.ref == 'refs/heads/morgan/trunk-cd-poc'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Create QA environment
      run: aws s3 cp libs/js/elfo/hello.txt $S3_URL
    - name: Update the PR to link to the QA environment
      run: |
        COMMENTS_URL=$(jq --raw-output .pull_request._links.comments.href "$GITHUB_EVENT_PATH") && \
        curl --request POST \
        --url ${COMMENTS_URL} \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "title": "QA Environment Created For ${{ github.sha }}",
          "body": "GitHub Action workflow ${{ github.workflow }} created a environment. \n\n Go to https://arcteryx-monobird-cd-poc.s3.us-west-2.amazonaws.com/${{github.sha}}/hello.txt and merge the pull request when ready"
          }'


