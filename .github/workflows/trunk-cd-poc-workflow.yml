name: Elfo
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.MONOBIRD_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.MONOBIRD_SECRET }}
  S3_QA_URL: s3://arcteryx-monobird-cd-poc/${{github.sha}}/index.html
  S3_PROD_URL: s3://arcteryx-monobird-cd-poc/index.html
  ARTIFACT_PATH: libs/js/elfo/hello.txt
on:
  pull_request:
    branches: 
      - master
    paths:
      - libs/js/elfo/*
      - .github/workflows/trunk-cd-poc-workflow.yml
  pull_request_review:
  push:
    branches: 
      - master
    paths:
      - libs/js/elfo/*
      - .github/workflows/trunk-cd-poc-workflow.yml
jobs:
  deploy-prod:
    if: github.event_name == 'push'
    name: Deploy To Production
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: copy to s3
      run: aws s3 cp $ARTIFACT_PATH $S3_PROD_URL --content-type "text/html"
      
  deploy-qa:
    if: github.event_name == 'pull_request'
    name: Build QA Environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Create QA environment
      run: aws s3 cp $ARTIFACT_PATH $S3_QA_URL --content-type "text/html"
    
    - name: Create a status
      run: |
        STATUSES_URL=$(jq --raw-output .pull_request._links.statuses.href "$GITHUB_EVENT_PATH") && \
        curl --request POST \
        --url ${STATUSES_URL} \
        --header 'authorization: Bearer ${{ secrets.CREATE_STATUS_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "state": "pending",
          "target_url": "https://arcteryx-monobird-cd-poc.s3.us-west-2.amazonaws.com/${{github.sha}}/index.html",
          "description": "Manual checks",
          "context": "qa"
          }'

  approve-qa:
    if: github.event_name == 'pull_request_review' && github.event.review.body == 'QA PASS'
    name: QA Pass
    runs-on: ubuntu-latest
    steps:
    - name: Set QA status to success
      run: |
        STATUSES_URL=$(jq --raw-output .pull_request._links.statuses.href "$GITHUB_EVENT_PATH") && \
        curl --request POST \
        --url ${STATUSES_URL} \
        --header 'authorization: Bearer ${{ secrets.CREATE_STATUS_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "state": "success",
          "target_url": "https://arcteryx-monobird-cd-poc.s3.us-west-2.amazonaws.com/${{github.sha}}/index.html",
          "description": "Manual checks",
          "context": "qa"
          }'
  fail-qa:
    if: github.event_name == 'pull_request_review' && github.event.review.body == 'QA FAIL'
    name: QA Fail
    runs-on: ubuntu-latest
    steps:
    - name: Set QA status to fail
      run: |
        curl --request POST \
        --url ${{github.event.pull_request._links.statuses.href}} \
        --header 'authorization: Bearer ${{ secrets.CREATE_STATUS_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "state": "failure",
          "target_url": "https://arcteryx-monobird-cd-poc.s3.us-west-2.amazonaws.com/${{github.sha}}/index.html",
          "description": "Manual checks",
          "context": "qa"
          }'          
#TEST
